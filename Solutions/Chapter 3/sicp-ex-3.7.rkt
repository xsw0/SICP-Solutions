#lang sicp
(define (make-account balance secret-password)
  (define (login password)
    (eq? password secret-password))
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch password m)
    (if (eq? password secret-password)
        (cond ((eq? m 'withdraw) withdraw)
              ((eq? m 'deposit) deposit)
              ((eq? m 'login) login)
              (else (error "Unknown request -- MAKE-ACCOUNT"
                           m)))
        (lambda (arg) "Incorrect password")))
  dispatch)
(define (make-joint account orig-password new-password)
  (if (account 'login orig-password)
      (lambda (password m)
        (if (eq? password new-password)
            (account orig-password m)
            (lambda (arg) "Incorrect password")))
      "Incorrect password"))
(define peter-acc (make-account 1000 'open-sesame))
(define paul-accd
  (make-joint peter-acc 'open-esame 'rosebud))
(define paul-acc
  (make-joint peter-acc 'open-sesame 'rosebud))

((paul-acc 'rosebud 'withdraw) 30)
((paul-acc 'rosbud 'withdraw) 30)
((paul-acc 'rosebud 'withdraw) 30)
((peter-acc 'rosebud 'withdraw) 30)
((peter-acc 'open-sesame 'withdraw) 30)
((paul-acc 'rosebud 'withdraw) 30)
((paul-acc 'rosebud 'withdraw) 30)